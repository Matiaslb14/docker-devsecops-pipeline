name: ci
on:
  push: { branches: ["main"] }
  pull_request: {}

jobs:
  build-scan-sign:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/notes-api:${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: instrumenta/conftest-action@v1
        with:
          files: compose.yml
          policy: docker/conftest
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          push: false
          tags: ${{ env.IMAGE }}
      - run: docker save -o image.tar $IMAGE
      - uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          exit-code: '1'
      - uses: aquasecurity/trivy-action@0.28.0
        with:
          input: image.tar
          scan-type: image
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          exit-code: '1'
      - uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE }}
          format: cyclonedx-json
          output-file: reports/sbom.cdx.json
      - run: |
          docker tag $IMAGE ghcr.io/${{ github.repository_owner }}/notes-api:latest
          docker push $IMAGE
          docker push ghcr.io/${{ github.repository_owner }}/notes-api:latest
      - uses: sigstore/cosign-installer@v3
      - run: cosign sign --yes $IMAGE
      - run: cosign verify $IMAGE | tee reports/cosign_verify.txt
      - uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
